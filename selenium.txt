*Library VS Framework
-라이브러리 : 특정 언어 문법을 토대로 그 안에서 라이브러리 만의 기능을 사용할 수 있도록 도와주는 도구 //requests, BS4

- 프레임워크 : 특정 언어의 문법안에서 자신들만의 독창적인 문법을 새롭게 창조했고, 해당 문법을 사용해야지만 사용할 수 있는 도구

selenium :
- 파이썬을 활용해서 크롤링해오고자 할 때 사용할 수 있는 도구(*Framework)
- 최근 웹 사이트들이 SPA(Single Page Application) 방식으로 구현 -> 기존 requests, BS4 방식으로는 크롤링이 안되는 경우 빈번
- 직접 웹 브라우저를 통제. 관리 기능 -> 실제 사람이 접속해서 사이트를 보고 있는 것인지, 아니면 크롤링을 통해서 사이트를 보고 있는지 인지 못하도록 조치
- 동적 사이트의 정보값을 찾아오는데 아주 효율(*크롤링을 하는데, 일정시간 지연값을 적용, 자바스크립트 내 특정 구문을 찾아와서 크롤링을 하는 등의 기능)

!pip install selenium

셀레니움이 브라우저를 통제하려면 브라우저가 사용하고 있는 웹드라이브를 통제할 수 있어야 함!!=> 웹드라이버 매니저 설치!

!pip install webdriver_manager
 
각각의 고유한 브라우저들은 모두 저마다 웹 브라우저 드라이버가 존재
해당 드라이버를 셀레니움이 통제.관리할 수 있도록 설정

1. webdriver : 셀레니움이 브라우저를 통제.관리를 할 수 있도록 도와주는 객체역할

2. Service : webdriver를 통해서 설정해야하는 서비스들이 있는데, 해당 서비스의 값을 정의할 수 있도록 해주는 프로토타입 객체

3. ChromeDriverManager : 서비스 값을 실제 정의할 때 필요한 함수의 역할

SPA 제작>React.js
> Node.js 설치

*셀레니움
1) 특정 태그값을 가지고 있는 요소를 찾아올 때 :
- find_element(By.TAG_NAME, "태그이름") > 문서내 상단부터 값을 찾기 시작하다가 최초로 값이 찾아지게 되면 찾는 기능을 멈추고, 찾은 요소를 반환함!
print(변수)

- find_elements > 문서 내 검색된 모든 값을 리스트 형태로 반환함!

2) 구체적인 값으로 크롤링 하고자 할 때 : 
BY.TAG_NAME
BY.ID
BY.CSS_SELECTOR


-------------
react 검색 후 
rs7+~

rafce

className ="App" 하면 중앙으로 옮겨짐

----------



Repositories
생성후
git init 
git add .
git commit -m "250718"
git push origin master

파일 올린 후 재업
git add .

git commit -m "코멘트"

git push origin master